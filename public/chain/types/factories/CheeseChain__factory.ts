/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { CheeseChain, CheeseChainInterface } from "../CheeseChain";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_lotId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "_result",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "LabResultAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_lotId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "LotAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_milkBatchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "NewMilkBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum CheeseChain.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct CheeseChain.Participant",
        name: "participant",
        type: "tuple",
      },
    ],
    name: "ParticipantAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum CheeseChain.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct CheeseChain.Participant",
        name: "participant",
        type: "tuple",
      },
    ],
    name: "RoleChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_stepId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "StepAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotNumber",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "addLabResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "milkBatchIds",
        type: "uint256[]",
      },
    ],
    name: "addLot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
        ],
        internalType: "struct CheeseChain.Coordinates",
        name: "coordinates",
        type: "tuple",
      },
    ],
    name: "addMilkBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum CheeseChain.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct CheeseChain.Participant",
        name: "participant",
        type: "tuple",
      },
    ],
    name: "addParticipant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotNumber",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
        ],
        internalType: "struct CheeseChain.Coordinates",
        name: "coordinates",
        type: "tuple",
      },
    ],
    name: "addStep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "administrator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "enum CheeseChain.Role",
        name: "_newRole",
        type: "uint8",
      },
    ],
    name: "changeParticipantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotNumber",
        type: "uint256",
      },
    ],
    name: "getLot",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "result",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
            ],
            internalType: "struct CheeseChain.TestResult",
            name: "testResult",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "lastStep",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "milkBatchId",
            type: "uint256[]",
          },
        ],
        internalType: "struct CheeseChain.Lot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isAdministrator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isBasicParticipant",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isLaboratory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isMilkProducer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lots",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "result",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct CheeseChain.TestResult",
        name: "testResult",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "lastStep",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "milkBatches",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
        ],
        internalType: "struct CheeseChain.Coordinates",
        name: "coordinates",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum CheeseChain.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeParticipant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "steps",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "previousStep",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "latitude",
            type: "string",
          },
          {
            internalType: "string",
            name: "longitude",
            type: "string",
          },
        ],
        internalType: "struct CheeseChain.Coordinates",
        name: "coordinates",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBatches",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSteps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b03191633179055611e4b806100326000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806369ff6abb116100ad578063cf23b37711610071578063cf23b377146102a4578063dfc2e251146102b7578063e7970342146102ca578063f1648e84146102dd578063f53d0a8e1461035257600080fd5b806369ff6abb146102315780637217e0b91461023a578063ab995d121461025e578063bab5e3d51461027e578063c0e045391461029157600080fd5b8063360f277b116100f4578063360f277b146101c95780634e266aea146101e0578063633342fe14610202578063668a2001146102155780636931b3ae1461022857600080fd5b806309e69ede146101315780630a2eb3011461015c578063277065841461018e5780632a83aada146101a15780632f9d3afb146101b4575b600080fd5b61014461013f36600461151e565b61037d565b60405161015393929190611826565b60405180910390f35b61017e61016a36600461151e565b6002546001600160a01b0391821691161490565b6040519015158152602001610153565b61017e61019c36600461151e565b610435565b61017e6101af36600461151e565b61047f565b6101c76101c236600461169c565b610488565b005b6101d260015481565b604051908152602001610153565b6101f36101ee36600461165c565b6106e3565b60405161015393929190611acb565b61017e61021036600461151e565b61083d565b6101c761022336600461151e565b610846565b6101d260005481565b6101d260065481565b61024d61024836600461165c565b6108eb565b6040516101539594939291906117db565b61027161026c36600461165c565b610add565b60405161015391906118fa565b6101c761028c3660046115e9565b610baf565b6101c761029f366004611541565b610d24565b6101c76102b2366004611579565b610e31565b6101c76102c5366004611624565b6110e5565b6101c76102d8366004611674565b611281565b6103286102eb36600461165c565b6004602090815260009182526040918290208251808401909352805460ff1615158352600181015491830191909152600281015460039091015483565b60408051845115158152602094850151948101949094528301919091526060820152608001610153565b600254610365906001600160a01b031681565b6040516001600160a01b039091168152602001610153565b60056020526000908152604090208054819061039890611ba9565b80601f01602080910402602001604051908101604052809291908181526020018280546103c490611ba9565b80156104115780601f106103e657610100808354040283529160200191610411565b820191906000526020600020905b8154815290600101906020018083116103f457829003601f168201915b5050506001909301549192505060ff8116906001600160a01b036101009091041683565b600060025b6001600160a01b03831660009081526005602052604090206001015460ff16600381111561047857634e487b7160e01b600052602160045260246000fd5b1492915050565b6000600161043a565b6002546001600160a01b03163314806104a557506104a53361047f565b6104f65760405162461bcd60e51b815260206004820181905260248201527f4d73672e73656e646572206973206e6f74206261736963206f722061646d696e60448201526064015b60405180910390fd5b600084815260046020526040902060030154849061056c5760405162461bcd60e51b815260206004820152602d60248201527f546865206c6f7420776974682074686520676976656e206e756d62657220646f60448201526c6573206e6f742065786973742160981b60648201526084016104ed565b600160008082825461057e9190611af5565b90915550506040805160a08101825233815260008781526004602090815290839020600201548183015242828401528251601f87018290048202810182019093528583529091606083019187908790819084018382808284376000920191909152505050908252506020016105f284611b26565b905260008054815260036020818152604092839020845181546001600160a01b0319166001600160a01b039091161781558482015160018201559284015160028401556060840151805161064d938501929190910190611355565b50608082015180518051600484019161066b91839160200190611355565b5060208281015180516106849260018501920190611355565b505060008054898252600460205260409182902060020181905590519093507fec445c04d22149c0897018b599bfbffbbcf13b30a4da88d37e30ee6df86d6b2492506106d4915042815260200190565b60405180910390a25050505050565b6007602052600090815260409081902080546001820154835180850190945260028301805492946001600160a01b0390921693928290829061072490611ba9565b80601f016020809104026020016040519081016040528092919081815260200182805461075090611ba9565b801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b505050505081526020016001820180546107b690611ba9565b80601f01602080910402602001604051908101604052809291908181526020018280546107e290611ba9565b801561082f5780601f106108045761010080835404028352916020019161082f565b820191906000526020600020905b81548152906001019060200180831161081257829003601f168201915b505050505081525050905083565b6000600361043a565b6002546001600160a01b031633146108705760405162461bcd60e51b81526004016104ed90611861565b6001600160a01b038082166000908152600560205260409020600101548291610100909104166108b25760405162461bcd60e51b81526004016104ed906118ac565b6001600160a01b0382166000908152600560205260408120906108d582826113d9565b5060010180546001600160a81b03191690555050565b600360208190526000918252604090912080546001820154600283015493830180546001600160a01b03909316949193919261092690611ba9565b80601f016020809104026020016040519081016040528092919081815260200182805461095290611ba9565b801561099f5780601f106109745761010080835404028352916020019161099f565b820191906000526020600020905b81548152906001019060200180831161098257829003601f168201915b505050505090806004016040518060400160405290816000820180546109c490611ba9565b80601f01602080910402602001604051908101604052809291908181526020018280546109f090611ba9565b8015610a3d5780601f10610a1257610100808354040283529160200191610a3d565b820191906000526020600020905b815481529060010190602001808311610a2057829003601f168201915b50505050508152602001600182018054610a5690611ba9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8290611ba9565b8015610acf5780601f10610aa457610100808354040283529160200191610acf565b820191906000526020600020905b815481529060010190602001808311610ab257829003601f168201915b505050505081525050905085565b6040805160c08101825260006080820181815260a0830182905282526020820181905291810191909152606080820152600082815260046020818152604092839020835160c081018552815460ff16151560808201908152600183015460a083015281526002820154818401526003820154818601529281018054855181850281018501909652808652939491936060860193830182828015610b9f57602002820191906000526020600020905b815481526020019060010190808311610b8b575b5050505050815250509050919050565b6002546001600160a01b0316331480610bcc5750610bcc3361083d565b610c335760405162461bcd60e51b815260206004820152603260248201527f546869732066756e6374696f6e206973206f6e6c792063616c6c61626c652062604482015271792061206d696c6b2070726f64756365722160701b60648201526084016104ed565b600160066000828254610c469190611af5565b909155505060408051606081018252428152336020820152908101610c6a83611b26565b905260065460009081526007602090815260409182902083518155838201516001820180546001600160a01b0319166001600160a01b03909216919091179055918301518051805191926002850192610cc69284920190611355565b506020828101518051610cdf9260018501920190611355565b5050509050506006547f1ed9a7a467facf402d310bfed1dcb9abef3674e796e5ca5d19071da6246ec90842604051610d1991815260200190565b60405180910390a250565b6002546001600160a01b03163314610d4e5760405162461bcd60e51b81526004016104ed90611861565b6001600160a01b03808316600090815260056020526040902060010154839161010090910416610d905760405162461bcd60e51b81526004016104ed906118ac565b6001600160a01b038316600090815260056020526040902060019081018054849260ff1990911690836003811115610dd857634e487b7160e01b600052602160045260246000fd5b02179055506001600160a01b0383166000908152600560205260409081902090517fff2d2d00dec063c036ff49fb55b1bf52d819c4c61dd7f8805b15f51d1809028491610e2491611a1f565b60405180910390a1505050565b6002546001600160a01b0316331480610e4e5750610e4e3361047f565b610e9a5760405162461bcd60e51b815260206004820181905260248201527f4d73672e73656e646572206973206e6f74206261736963206f722061646d696e60448201526064016104ed565b818180610f045760405162461bcd60e51b815260206004820152603260248201527f506c656173652070726f76696465206174206c65617374206f6e65206d696c6b604482015271206261746368206964656e7469666965722160701b60648201526084016104ed565b60005b81811015610fca5760076000848484818110610f3357634e487b7160e01b600052603260045260246000fd5b9050602002013581526020019081526020016000206000015460001415610fb85760405162461bcd60e51b815260206004820152603360248201527f506c656173652070726f76696465206f6e6c79206578697374696e67206d696c6044820152726b206261746368206964656e7469666965727360681b60648201526084016104ed565b80610fc281611bde565b915050610f07565b506001806000828254610fdd9190611af5565b92505081905550600060405180604001604052806000151581526020016000815250905060405180608001604052808281526020016000815260200142815260200186868080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509390945250506001805482526004602081815260409384902086518051825460ff191690151517825582015193810193909355858101516002840155928501516003830155606085015180519294506110ad9391850192910190611416565b509050506001547f0bed61055f62b96d21f771dedadfcf299cb70edf954dcd0c73c73e5ef16655e5426040516106d491815260200190565b6002546001600160a01b0316331461110f5760405162461bcd60e51b81526004016104ed90611861565b61111f606082016040830161151e565b6001600160a01b0381166111805760405162461bcd60e51b815260206004820152602260248201527f54686520616464726573732063616e6e6f742062652061203020616464726573604482015261732160f01b60648201526084016104ed565b611190606083016040840161151e565b6001600160a01b03818116600090815260056020526040902060010154610100900416156112175760405162461bcd60e51b815260206004820152602e60248201527f41207061727469636970616e742077697468207468697320616464726573732060448201526d65786973747320616c726561647960901b60648201526084016104ed565b826005600061122c606084016040850161151e565b6001600160a01b03168152602081019190915260400160002061124f8282611c76565b9050507fef9377c241485790a66c08be6e52dff1ad726099e0467fb606578787de7941e383604051610e249190611974565b6002546001600160a01b031633148061129e575061129e33610435565b6112ea5760405162461bcd60e51b815260206004820152601e60248201527f4d73672e73656e646572206973206e6f74206c6162206f722061646d696e000060448201526064016104ed565b604080518082018252821515808252426020808401828152600088815260049092528582209451855460ff1916901515178555516001909401939093559251909185917ff77d5f9755b6151104d42d1008bf3453a129d0642c72a499f7b38cb68416a6199190a45050565b82805461136190611ba9565b90600052602060002090601f01602090048101928261138357600085556113c9565b82601f1061139c57805160ff19168380011785556113c9565b828001600101855582156113c9579182015b828111156113c95782518255916020019190600101906113ae565b506113d5929150611450565b5090565b5080546113e590611ba9565b6000825580601f106113f5575050565b601f0160209004906000526020600020908101906114139190611450565b50565b8280548282559060005260206000209081019282156113c957916020028201828111156113c95782518255916020019190600101906113ae565b5b808211156113d55760008155600101611451565b803561147081611df3565b919050565b803561147081611e08565b600082601f830112611490578081fd5b813567ffffffffffffffff808211156114ab576114ab611c0f565b604051601f8301601f19908116603f011681019082821181831017156114d3576114d3611c0f565b816040528381528660208588010111156114eb578485fd5b8360208701602083013792830160200193909352509392505050565b600060408284031215611518578081fd5b50919050565b60006020828403121561152f578081fd5b813561153a81611df3565b9392505050565b60008060408385031215611553578081fd5b823561155e81611df3565b9150602083013561156e81611e08565b809150509250929050565b6000806020838503121561158b578182fd5b823567ffffffffffffffff808211156115a2578384fd5b818501915085601f8301126115b5578384fd5b8135818111156115c3578485fd5b8660208260051b85010111156115d7578485fd5b60209290920196919550909350505050565b6000602082840312156115fa578081fd5b813567ffffffffffffffff811115611610578182fd5b61161c84828501611507565b949350505050565b600060208284031215611635578081fd5b813567ffffffffffffffff81111561164b578182fd5b82016060818503121561153a578182fd5b60006020828403121561166d578081fd5b5035919050565b60008060408385031215611686578182fd5b823591506020830135801515811461156e578182fd5b600080600080606085870312156116b1578182fd5b84359350602085013567ffffffffffffffff808211156116cf578384fd5b818701915087601f8301126116e2578384fd5b8135818111156116f0578485fd5b886020828501011115611701578485fd5b60208301955080945050604087013591508082111561171e578283fd5b5061172b87828801611507565b91505092959194509250565b6004811061175557634e487b7160e01b600052602160045260246000fd5b9052565b60008151808452815b8181101561177e57602081850181015186830182015201611762565b8181111561178f5782602083870101525b50601f01601f19169290920160200192915050565b60008151604084526117b96040850182611759565b9050602083015184820360208601526117d28282611759565b95945050505050565b60018060a01b038616815284602082015283604082015260a06060820152600061180860a0830185611759565b828103608084015261181a81856117a4565b98975050505050505050565b6060815260006118396060830186611759565b90506118486020830185611737565b6001600160a01b03929092166040919091015292915050565b6020808252602b908201527f546869732066756e6374696f6e206973206f6e6c792063616c6c61626c65206260408201526a7920616e2061646d696e2160a81b606082015260800190565b6020808252602e908201527f41207061727469636970616e742077697468207468697320616464726573732060408201526d191bd95cc81b9bdd08195e1a5cdd60921b606082015260800190565b602080825282518051151583830152810151604083015260009060c08301848201516060858101919091526040860151608086015285015160a080860152805191829052820190839060e08601905b808310156119695783518252928401926001929092019190840190611949565b509695505050505050565b6020815260008235601e1984360301811261198d578182fd5b8301803567ffffffffffffffff8111156119a5578283fd5b8036038513156119b3578283fd5b60606020850152806080850152806020830160a08601378260a082860101526119de60208601611475565b91506119ed6040850183611737565b6119f960408601611465565b6001600160a01b03811660608601529150601f01601f19169290920160a0019392505050565b60006020808352606081840152818454611a3881611ba9565b80608087015260a0600180841660008114611a5a5760018114611a6e57611a99565b60ff1985168984015260c089019550611a99565b898852868820885b85811015611a915781548b8201860152908301908801611a76565b8a0184019650505b508801549450611ab3925050506040850160ff8416611737565b6001600160a01b03600883901c16606085015261161c565b8381526001600160a01b03831660208201526060604082018190526000906117d2908301846117a4565b60008219821115611b0857611b08611bf9565b500190565b5b81811015611b225760008155600101611b0e565b5050565b600060408236031215611b37578081fd5b6040516040810167ffffffffffffffff8282108183111715611b5b57611b5b611c0f565b816040528435915080821115611b6f578384fd5b611b7b36838701611480565b83526020850135915080821115611b90578384fd5b50611b9d36828601611480565b60208301525092915050565b600181811c90821680611bbd57607f821691505b6020821081141561151857634e487b7160e01b600052602260045260246000fd5b6000600019821415611bf257611bf2611bf9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60008135611c3281611df3565b92915050565b60008135611c3281611e08565b60048210611c6357634e487b7160e01b600052602160045260246000fd5b60ff1981541660ff831681178255505050565b8135601e19833603018112611c8a57600080fd5b8201803567ffffffffffffffff811115611ca357600080fd5b60208136038184011315611cb657600080fd5b611cc08454611ba9565b600080601f8511601f841181811715611cdf5760008981526020902092505b8015611d0d57601f870160051c830186881015611cf95750825b611d0b601f870160051c850182611b0d565b505b508060018114611d4357600094508615611d2a5785848901013594505b600187901b600019600389901b1c198616178955611d98565b601f198716945082845b86811015611d6e578986018801358255948701946001909101908701611d4d565b5087861015611d8d5760001960f88960031b161c1987868b0101351681555b5060018760011b0189555b5050505050600184019250611db7611db1828701611c38565b84611c45565b5050611dee611dc860408501611c25565b828054610100600160a81b03191660089290921b610100600160a81b0316919091179055565b505050565b6001600160a01b038116811461141357600080fd5b6004811061141357600080fdfea2646970667358221220f4d0c37f002004dd0db2f1f2a2e76492b1c0ccce559e7706c2ee393cfe4c1a5b64736f6c63430008040033";

type CheeseChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheeseChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheeseChain__factory extends ContractFactory {
  constructor(...args: CheeseChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CheeseChain> {
    return super.deploy(overrides || {}) as Promise<CheeseChain>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheeseChain {
    return super.attach(address) as CheeseChain;
  }
  override connect(signer: Signer): CheeseChain__factory {
    return super.connect(signer) as CheeseChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheeseChainInterface {
    return new utils.Interface(_abi) as CheeseChainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheeseChain {
    return new Contract(address, _abi, signerOrProvider) as CheeseChain;
  }
}
